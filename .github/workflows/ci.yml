name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  # Detectar cambios en archivos para filtrar jobs
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - '.github/workflows/ci.yml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/ci.yml'

  go:
    name: Go Backend Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Go fmt (fails if files need formatting)
        working-directory: backend
        run: |
          fmt_out=$(gofmt -l .)
          if [ -n "$fmt_out" ]; then
            echo "Files not formatted:"
            echo "$fmt_out"
            exit 1
          fi

      - name: Go vet
        working-directory: backend
        run: go vet ./...

      - name: Go build
        working-directory: backend
        run: go build ./...

  ts:
    name: TypeScript Frontend Typecheck (pnpm)
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    steps:
      - uses: actions/checkout@v4

      # Instala pnpm (v9 recomendado)
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm"
          cache-dependency-path: frontend/pnpm-lock.yaml

      - name: Install deps
        working-directory: frontend
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        working-directory: frontend
        run: pnpm run typecheck